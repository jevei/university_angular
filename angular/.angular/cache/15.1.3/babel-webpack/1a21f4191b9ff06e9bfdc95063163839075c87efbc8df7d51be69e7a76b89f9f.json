{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Product } from 'src/app/models/product.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product-api-request.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class AdminComponent {\n  constructor(apiService, router) {\n    this.apiService = apiService;\n    this.router = router;\n    this.addProductForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      stock: new FormControl('', [Validators.required]),\n      price: new FormControl('', [Validators.required]),\n      expiration: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      last_input: new FormControl('', [Validators.required]),\n      last_output: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  addProduct() {\n    let newProduct = new Product();\n    newProduct.name = this.addProductForm.get('name')?.value;\n    newProduct.stock = this.addProductForm.get('stock')?.value;\n    newProduct.price = this.addProductForm.get('price')?.value;\n    newProduct.expiration = this.addProductForm.get('expiration')?.value;\n    newProduct.description = this.addProductForm.get('description')?.value;\n    newProduct.last_input = this.addProductForm.get('last_input')?.value;\n    newProduct.last_output = this.addProductForm.get('last_output')?.value;\n    this.apiService.addProduct(newProduct).subscribe(success => {\n      if (success) {\n        this.router.navigate(['/products']);\n        console.log('OK');\n      } else {\n        console.log('ERROR');\n        alert(\"Erreur dans le formulaire d'inscription\");\n      }\n    });\n  }\n}\nAdminComponent.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.ProductApiRequestService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminComponent,\n  selectors: [[\"app-admin\"]],\n  decls: 37,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-group\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"nom\", 1, \"form-control\"], [\"formControlName\", \"stock\", \"type\", \"text\", \"placeholder\", \"stock\", 1, \"form-control\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"formControlName\", \"price\", \"type\", \"text\", \"placeholder\", \"prix\", 1, \"form-control\"], [\"formControlName\", \"expiration\", \"type\", \"text\", \"placeholder\", \"expiration\", 1, \"form-control\"], [\"formControlName\", \"description\", \"type\", \"text\", \"placeholder\", \"description\", 1, \"form-control\"], [\"formControlName\", \"last_input\", \"type\", \"text\", \"placeholder\", \"derni\\u00E8re entr\\u00E9\", 1, \"form-control\"], [\"formControlName\", \"last_output\", \"type\", \"text\", \"placeholder\", \"derni\\u00E8re sortis\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\", 3, \"disabled\"]],\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.addProduct();\n      });\n      i0.ɵɵelementStart(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Ajouter un m\\u00E9dicament\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\");\n      i0.ɵɵtext(5, \"Nom :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\");\n      i0.ɵɵtext(9, \"Stock :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\");\n      i0.ɵɵtext(13, \"Prix :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"div\", 6)(16, \"span\", 7);\n      i0.ɵɵtext(17, \"$\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 2)(20, \"label\");\n      i0.ɵɵtext(21, \"Expiration :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 2)(24, \"label\");\n      i0.ɵɵtext(25, \"Description :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 2)(28, \"label\");\n      i0.ɵɵtext(29, \"Derni\\u00E8re entr\\u00E9e :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 2)(32, \"label\");\n      i0.ɵɵtext(33, \"Derni\\u00E8re sortis :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 13);\n      i0.ɵɵtext(36, \"Ajouter\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.addProductForm);\n      i0.ɵɵadvance(35);\n      i0.ɵɵproperty(\"disabled\", ctx.addProductForm.invalid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Product","AdminComponent","constructor","apiService","router","addProductForm","name","required","stock","price","expiration","description","last_input","last_output","ngOnInit","addProduct","newProduct","get","value","subscribe","success","navigate","console","log","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Predator\\Desktop\\université\\session4\\INF1013\\jxr\\src\\app\\components\\admin\\admin.component.ts","C:\\Users\\Predator\\Desktop\\université\\session4\\INF1013\\jxr\\src\\app\\components\\admin\\admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ProductApiRequestService } from 'src/app/services/product-api-request.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css'],\r\n})\r\nexport class AdminComponent {\r\n  addProductForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ProductApiRequestService,\r\n    private router: Router\r\n  ) {\r\n    this.addProductForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required]),\r\n      stock: new FormControl('', [Validators.required]),\r\n      price: new FormControl('', [Validators.required]),\r\n      expiration: new FormControl('', [Validators.required]),\r\n      description: new FormControl('', [Validators.required]),\r\n      last_input: new FormControl('', [Validators.required]),\r\n      last_output: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n  ngOnInit(): void {}\r\n\r\n  addProduct() {\r\n    let newProduct: Product = new Product();\r\n    newProduct.name = this.addProductForm.get('name')?.value;\r\n    newProduct.stock = this.addProductForm.get('stock')?.value;\r\n    newProduct.price = this.addProductForm.get('price')?.value;\r\n    newProduct.expiration = this.addProductForm.get('expiration')?.value;\r\n    newProduct.description = this.addProductForm.get('description')?.value;\r\n    newProduct.last_input = this.addProductForm.get('last_input')?.value;\r\n    newProduct.last_output = this.addProductForm.get('last_output')?.value;\r\n    this.apiService.addProduct(newProduct).subscribe((success) => {\r\n      if (success) {\r\n        this.router.navigate(['/products']);\r\n        console.log('OK');\r\n      } else {\r\n        console.log('ERROR');\r\n        alert(\"Erreur dans le formulaire d'inscription\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]=\"addProductForm\" (ngSubmit)=\"addProduct()\">\r\n  <h2 class=\"mb-3\">Ajouter un médicament</h2>\r\n  <div class=\"form-group\">\r\n    <label>Nom :</label>\r\n    <input formControlName=\"name\" type=\"text\" placeholder=\"nom\" class=\"form-control\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Stock :</label>\r\n    <input formControlName=\"stock\" type=\"text\" placeholder=\"stock\" class=\"form-control\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Prix :</label>\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">$</span>\r\n      </div>\r\n      <input formControlName=\"price\" type=\"text\" placeholder=\"prix\" class=\"form-control\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Expiration :</label>\r\n    <input formControlName=\"expiration\" type=\"text\" placeholder=\"expiration\" class=\"form-control\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Description :</label>\r\n    <input formControlName=\"description\" type=\"text\" placeholder=\"description\" class=\"form-control\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Dernière entrée :</label>\r\n    <input formControlName=\"last_input\" type=\"text\" placeholder=\"dernière entré\" class=\"form-control\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Dernière sortis :</label>\r\n    <input formControlName=\"last_output\" type=\"text\" placeholder=\"dernière sortis\" class=\"form-control\">\r\n  </div>\r\n  <button [disabled]=\"addProductForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Ajouter</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}