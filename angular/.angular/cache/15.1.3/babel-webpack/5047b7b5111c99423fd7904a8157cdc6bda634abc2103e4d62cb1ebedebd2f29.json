{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/\"];\n};\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n  ngOnInit() {}\n  logIn() {\n    this.authService.userLogin(this.loginForm.get('email')?.value, this.loginForm.get('password')?.value).subscribe(success => {\n      if (success) {\n        this.router.navigate(['/']);\n        console.log('la team de JXR est trop forte');\n      } else {\n        console.log('ERROR');\n        alert('Email ou Mot de Passe invalide.');\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[1, \"container\", \"text-center\"], [1, \"row\", \"mt-2\"], [1, \"col-10\", \"offset-1\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [1, \"invalid-feedback\", \"text-left\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\"], [\"role\", \"button\", 1, \"btn\", \"btn-lg\", \"btn\", \"btn-secondary\", \"btn-block\", 3, \"routerLink\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"h1\");\n      i0.ɵɵtext(3, \"Connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.logIn();\n      });\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"p\");\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementStart(11, \"div\", 6);\n      i0.ɵɵtext(12, \" Veuillez entrer une adresse email valide. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"p\");\n      i0.ɵɵtext(15, \"Mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 7);\n      i0.ɵɵelementStart(17, \"div\", 6);\n      i0.ɵɵtext(18, \" Veuillez entrer un mot de passe valide. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 8);\n      i0.ɵɵtext(20, \"Connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"a\", 9);\n      i0.ɵɵtext(22, \"Annuler\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;AASnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAC1D,IAAI,CAACC,SAAS,GAAG,IAAIN,SAAS,CAAC;MAC7BO,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACM,KAAK,CAAC,CAAC;MACnEE,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAC5BE,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EACJ;EACAC,QAAQ,IAAU;EAElBC,KAAK;IACH,IAAI,CAACR,WAAW,CACbS,SAAS,CACR,IAAI,CAACP,SAAS,CAACQ,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,EAClC,IAAI,CAACT,SAAS,CAACQ,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK,CACtC,CACAC,SAAS,CAAEC,OAAO,IAAI;MACrB,IAAIA,OAAO,EAAE;QACX,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;OAC7C,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpBC,KAAK,CAAC,iCAAiC,CAAC;;IAE5C,CAAC,CAAC;EACN;;AA7BWnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,4BAAM;MAEEA,yBAAS;MAAAA,iBAAK;MAClBA,8BAAsB;MAGYA;QAAA,OAAYC,WAAO;MAAA,EAAC;MAChDD,8BAAwB;MACnBA,qBAAK;MAAAA,iBAAI;MACZA,4BAAqF;MACrFA,+BAAwC;MACtCA,4DACF;MAAAA,iBAAM;MAGRA,+BAAwB;MACnBA,6BAAY;MAAAA,iBAAI;MACnBA,4BAA8F;MAC9FA,+BAAwC;MACtCA,0DACF;MAAAA,iBAAM;MAGRA,kCAA+D;MAAAA,0BAAS;MAAAA,iBAAS;MACjFA,6BAAqF;MAAAA,wBAAO;MAAAA,iBAAI;;;MAlB5FA,eAAuB;MAAvBA,yCAAuB;MAkBxBA,gBAAoB;MAApBA,uDAAoB","names":["FormControl","FormGroup","Validators","LoginComponent","constructor","authService","router","loginForm","email","required","password","minLength","ngOnInit","logIn","userLogin","get","value","subscribe","success","navigate","console","log","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Predator\\Desktop\\université\\session4\\INF1013\\jxr\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Predator\\Desktop\\université\\session4\\INF1013\\jxr\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n      ]),\r\n    });\r\n  }\r\n  ngOnInit(): void {}\r\n\r\n  logIn() {\r\n    this.authService\r\n      .userLogin(\r\n        this.loginForm.get('email')?.value,\r\n        this.loginForm.get('password')?.value\r\n      )\r\n      .subscribe((success) => {\r\n        if (success) {\r\n          this.router.navigate(['/']);\r\n          console.log('la team de JXR est trop forte');\r\n        } else {\r\n          console.log('ERROR');\r\n          alert('Email ou Mot de Passe invalide.');\r\n        }\r\n      });\r\n  }\r\n}\r\n","<body>\r\n  <div class=\"container text-center\">\r\n    <h1>Connexion</h1>\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-10 offset-1\">\r\n        <!-- https://getbootstrap.com/docs/4.5/components/forms -->\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"logIn()\">\r\n          <div class=\"form-group\">\r\n            <p>Email</p>\r\n            <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" class=\"form-control\">\r\n            <div class=\"invalid-feedback text-left\">\r\n              Veuillez entrer une adresse email valide.\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <p>Mot de passe</p>\r\n            <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" class=\"form-control\">\r\n            <div class=\"invalid-feedback text-left\">\r\n              Veuillez entrer un mot de passe valide.\r\n            </div>\r\n          </div>\r\n\r\n          <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Connexion</button>\r\n          <a [routerLink]=\"['/']\" class=\"btn btn-lg btn btn-secondary btn-block\" role=\"button\">Annuler</a>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}